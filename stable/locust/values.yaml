loadtest:
  # loadtest.name -- a name used for resources and settings in this load test
  name: locust-loadtest
  # loadtest.locust_locustfile -- the name of the locustfile
  locust_locustfile: pv_checker.py
  # loadtest.locust_locustfile_path -- the path of the locustfile (without trailing backslash)
  locust_locustfile_path: "/mnt/locust/tests"
  # loadtest.locust_locustfile_configmap -- name of a configmap containing your locustfile (default uses the example locustfile)
  locust_locustfile_configmap: "my-loadtest-locustfile"
  # loadtest.locust_lib_configmap -- name of a configmap containing your lib (default uses the example lib)
  locust_lib_configmap: "my-loadtest-lib"
  # loadtest.locust_host -- the host you will load test
  locust_host: https://www.google.com
  # master.isConnectedToInternet -- If connected ot the internet
  isConnectedToInternet: true
  # loadtest.pip_packages -- a list of extra python pip packages to install
  pip_packages: []
  # loadtest.environment -- environment variables used in the load test for both master and workers
  environment: {
      measure_time: false,
      pro_active_wmts_bbox: [35.024411528661574, 32.79419004139809, 35.37597717328861, 32.947998391903226],
      mc_region_value: "ישראל, ירדן",
      mc_polygon_value: '{"bbox":[34.8468438649828,32.0466327470143,34.8804418550117,32.0689996810298],"type":"FeatureCollection","features":[{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[34.8468438649828,32.0689996810298],[34.8637856279928,32.0590059440186],[34.8773961450173,32.0680478960404],[34.8804418550117,32.0528193460686],[34.8786334639958,32.0466327470143],[34.8605495609931,32.0488218510146],[34.8468438649828,32.0689996810298]]]},"properties":{"Dsc":"תשתית אורתופוטו בישראל עדכני לאפריל 2019","Rms":null,"Ep90":"3","Scale":null,"Source":"MAS_6_ORT_247993-1.0","Resolution":"0.2","SensorType":"OTHER","SourceName":"O_arzi_mz_w84geo_Tiff_20cm","UpdateDate":"06/04/2019"}}]}',
      version: "1.0.0",
      wait_time: 30,
      projection: "roie",
      csv_path: "csv_data/data/wmts_shaziri.csv",
      gridName: "newGrids",
      imageType: ".png",
      layer: "bluemarble-dani-mumhui-Orthophoto",
      users: 15,
      port: 8080,
      layer_type: "wmts",
      test_to_run: "Lateron",
      sub_url_for_pycsw: "https://catalog-qa-raster-catalog-pycsw-route-raster.apps.v0h0bdx6.eastus.aroapp.io/",
    } # VAR: VALUE
  # loadtest.environment_secret -- environment variables used in the load test for both master and workers, stored as secrets
  environment_secret:
    "replace_me"
    # VAR: VALUE
  # loadtest.environment_external_secret -- environment variables used in the load test for both master and workers, stored in secrets created outside this chart. Each secret contains a list of values in it. Usage: `secret_name: [AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY]`
  environment_external_secret:
    {}
    # SECRET_NAME: VAR
  # loadtest.mount_external_secret -- additional mount used in the load test for both master and workers, stored in secrets created outside this chart. Each secret contains a list of values in it. Usage: `mountPath: yourMountLocation, files: { secret_name: [AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY] }`
  mount_external_secret: {}
  secret_name_api_key_locust: "automation-secret"
  sub_url_secret:
    "automation-sub-url"
    # mountPath: yourMountLocation
    # files:
    # secret_name: var
  # loadtest.headless -- whether to run locust with headless settings
  headless: false
  # loadtest.tags -- whether to run locust with `--tags [TAG [TAG ...]]` options, so only tasks with any matching tags will be executed
  tags: ""
  # loadtest.excludeTags -- whether to run locust with `--exclude-tags [TAG [TAG ...]]` options, so only tasks with no matching tags will be executed
  excludeTags: ""
  # loadtest.locustCmd -- The command to run Locust
  locustCmd: "/usr/local/bin/locust"

image:
  repository: acrarolibotnonprod.azurecr.io/locust-automation
  tag: 2.4.0
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  # type: NodePort

  annotations: {}
  extraLabels: {}

master:
  # master.image -- A custom docker image including tag
  image: "acrarolibotnonprod.azurecr.io/locust-automation:2.4.0"
  # master.logLevel -- Log level. Can be INFO or DEBUG
  logLevel: INFO
  # master.resources -- resources for the locust master to add
  resources:
    {}

    # limits:
    #   cpu: 2000m
    #   memory: 1024Mi
    # requests:
    #   cpu: 1000m
    #   memory: 1024Mi
  serviceAccountAnnotations: {}
  # master.deploymentAnnotations -- Annotations on the deployment for master
  deploymentAnnotations: {}
  # master.envs_include_default -- Whether to include default environment variables
  envs_include_default: true
  # master.environment -- environment variables for the master
  environment: {}
  # master.args -- Any extra command args for the master
  args: []
  #  command:
  #    - sh
  #    - /config/docker-entrypoint.sh
  strategy:
    type: RollingUpdate
  # master.pdb.enabled -- Whether to create a PodDisruptionBudget for the master pod
  pdb:
    enabled: false
  # master.auth.enabled -- When enabled, UI basic auth will be enforced with the given username and password
  auth:
    enabled: true
    username: "danny"
    password: "danny"
  # master.csv_options -- Options for the CSV output
  csv_options:
    enabled: false
    csv: "/home/kaka/dam/"
    csv_history: false

  # master.restartPolicy -- master pod's restartPolicy. Can be Always, OnFailure, or Never.
  restartPolicy: Always

worker:
  # worker.image -- A custom docker image including tag
  image: "acrarolibotnonprod.azurecr.io/locust-automation:2.4.0"
  # worker.logLevel -- Log level. Can be INFO or DEBUG
  logLevel: INFO
  replicas: 1
  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 40
  # worker.resources -- resources for the locust worker
  resources:
    {}
    # limits:
    #   cpu: 500m
    #   memory: 256Mi
    # requests:
    #   cpu: 500m
    #   memory: 256Mi
  serviceAccountAnnotations: {}
  # worker.deploymentAnnotations -- Annotations on the deployment for workers
  deploymentAnnotations: {}
  # worker.envs_include_default -- Whether to include default environment variables
  envs_include_default: true
  # worker.environment -- environment variables for the workers
  environment: { SUB_URL_FOR_IDS: "https://www.google.com" }
  # worker.args -- Any extra command args for the workers
  args: []
  #  command:
  #    - sh
  #    - /config/docker-entrypoint.sh
  strategy:
    type: RollingUpdate
  # worker.restartPolicy -- worker pod's restartPolicy. Can be Always, OnFailure, or Never.
  restartPolicy: Always

nameOverride: ""
fullnameOverride: ""
pullSecretName: acr-registry

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      pathType: ImplementationSpecific
      path: /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# extraConfigMaps -- Any extra configmaps to mount for the master and worker. Can be used for extra python packages
extraConfigMaps: {}
nodeSelector: {}
tolerations: []
affinity: {}
# extraLabels -- Any extra labels to apply to all resources
extraLabels: {}

# Routes - enable if needed for the load test (UI).
route:
  enabled: true
  path: /
  https: true
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)

storage:
  pvcName: ingestion-source-pvc
  subPath: ingestion-source